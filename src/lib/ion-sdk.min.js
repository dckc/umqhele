var IonSDK=function(I){var g={};function n(C){if(g[C])return g[C].exports;var A=g[C]={i:C,l:!1,exports:{}};return I[C].call(A.exports,A,A.exports,n),A.l=!0,A.exports}return n.m=I,n.c=g,n.d=function(I,g,C){n.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:C})},n.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},n.t=function(I,g){if(1&g&&(I=n(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var C=Object.create(null);if(n.r(C),Object.defineProperty(C,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var A in I)n.d(C,A,function(g){return I[g]}.bind(null,A));return C},n.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return n.d(g,"a",g),g},n.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},n.p="",n(n.s=1)}([function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.makeRemote = exports.LocalStream = exports.VideoConstraints = void 0;\r\nexports.VideoConstraints = {\r\n    qvga: {\r\n        resolution: {\r\n            width: { ideal: 320 },\r\n            height: { ideal: 180 },\r\n            frameRate: {\r\n                ideal: 15,\r\n                max: 30,\r\n            },\r\n        },\r\n        encodings: {\r\n            maxBitrate: 150000,\r\n            maxFramerate: 15.0,\r\n        },\r\n    },\r\n    vga: {\r\n        resolution: {\r\n            width: { ideal: 640 },\r\n            height: { ideal: 360 },\r\n            frameRate: {\r\n                ideal: 30,\r\n                max: 60,\r\n            },\r\n        },\r\n        encodings: {\r\n            maxBitrate: 500000,\r\n            maxFramerate: 30.0,\r\n        },\r\n    },\r\n    shd: {\r\n        resolution: {\r\n            width: { ideal: 960 },\r\n            height: { ideal: 540 },\r\n            frameRate: {\r\n                ideal: 30,\r\n                max: 60,\r\n            },\r\n        },\r\n        encodings: {\r\n            maxBitrate: 1200000,\r\n            maxFramerate: 30.0,\r\n        },\r\n    },\r\n    hd: {\r\n        resolution: {\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 },\r\n            frameRate: {\r\n                ideal: 30,\r\n                max: 60,\r\n            },\r\n        },\r\n        encodings: {\r\n            maxBitrate: 2500000,\r\n            maxFramerate: 30.0,\r\n        },\r\n    },\r\n    fhd: {\r\n        resolution: {\r\n            width: { ideal: 1920 },\r\n            height: { ideal: 1080 },\r\n            frameRate: {\r\n                ideal: 30,\r\n                max: 60,\r\n            },\r\n        },\r\n        encodings: {\r\n            maxBitrate: 4000000,\r\n            maxFramerate: 30.0,\r\n        },\r\n    },\r\n    qhd: {\r\n        resolution: {\r\n            width: { ideal: 2560 },\r\n            height: { ideal: 1440 },\r\n            frameRate: {\r\n                ideal: 30,\r\n                max: 60,\r\n            },\r\n        },\r\n        encodings: {\r\n            maxBitrate: 8000000,\r\n            maxFramerate: 30.0,\r\n        },\r\n    },\r\n};\r\nconst defaults = {\r\n    codec: 'VP8',\r\n    resolution: 'hd',\r\n    audio: true,\r\n    video: true,\r\n    simulcast: false,\r\n};\r\nclass LocalStream {\r\n    constructor(stream, constraints) {\r\n        this.constraints = constraints;\r\n        this.stream = stream;\r\n    }\r\n    static async getUserMedia(constraints = defaults) {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n            audio: LocalStream.computeAudioConstraints({\r\n                ...defaults,\r\n                ...constraints,\r\n            }),\r\n            video: LocalStream.computeVideoConstraints({\r\n                ...defaults,\r\n                ...constraints,\r\n            }),\r\n        });\r\n        return new LocalStream(stream, {\r\n            ...defaults,\r\n            ...constraints,\r\n        });\r\n    }\r\n    static async getDisplayMedia(constraints = {\r\n        codec: 'VP8',\r\n        resolution: 'hd',\r\n        audio: false,\r\n        video: true,\r\n        simulcast: false,\r\n    }) {\r\n        // @ts-ignore\r\n        const stream = await navigator.mediaDevices.getDisplayMedia({\r\n            video: true,\r\n        });\r\n        return new LocalStream(stream, {\r\n            ...defaults,\r\n            ...constraints,\r\n        });\r\n    }\r\n    static computeAudioConstraints(constraints) {\r\n        return !!constraints.audio;\r\n    }\r\n    static computeVideoConstraints(constraints) {\r\n        if (constraints.video instanceof Object) {\r\n            return constraints.video;\r\n        }\r\n        else if (constraints.video && constraints.resolution) {\r\n            return {\r\n                ...exports.VideoConstraints[constraints.resolution].resolution,\r\n            };\r\n        }\r\n        return constraints.video;\r\n    }\r\n    getTrack(kind) {\r\n        let tracks;\r\n        if (kind === 'video') {\r\n            tracks = this.stream.getVideoTracks();\r\n            return tracks.length > 0 ? this.stream.getVideoTracks()[0] : undefined;\r\n        }\r\n        tracks = this.stream.getAudioTracks();\r\n        return tracks.length > 0 ? this.stream.getAudioTracks()[0] : undefined;\r\n    }\r\n    async getNewTrack(kind) {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n            [kind]: kind === 'video'\r\n                ? LocalStream.computeVideoConstraints(this.constraints)\r\n                : LocalStream.computeAudioConstraints(this.constraints),\r\n        });\r\n        return stream.getTracks()[0];\r\n    }\r\n    publishTrack(track) {\r\n        if (this.pc) {\r\n            if (track.kind === 'video' && this.constraints.simulcast) {\r\n                const encodings = [\r\n                    {\r\n                        rid: 'f',\r\n                    },\r\n                    {\r\n                        rid: 'h',\r\n                        scaleResolutionDownBy: 2.0,\r\n                        maxBitrate: 150000,\r\n                    },\r\n                    {\r\n                        rid: 'q',\r\n                        scaleResolutionDownBy: 4.0,\r\n                        maxBitrate: 100000,\r\n                    },\r\n                ];\r\n                if (this.constraints.encodings) {\r\n                    this.constraints.encodings.forEach((encoding) => {\r\n                        switch (encoding.layer) {\r\n                            case 'high':\r\n                                if (encoding.maxBitrate) {\r\n                                    encodings[0].maxBitrate = encoding.maxBitrate;\r\n                                }\r\n                                if (encoding.maxFramerate) {\r\n                                    encodings[0].maxFramerate = encoding.maxFramerate;\r\n                                }\r\n                                break;\r\n                            case 'medium':\r\n                                if (encoding.maxBitrate) {\r\n                                    encodings[1].maxBitrate = encoding.maxBitrate;\r\n                                }\r\n                                if (encoding.maxFramerate) {\r\n                                    encodings[1].maxFramerate = encoding.maxFramerate;\r\n                                }\r\n                                break;\r\n                            case 'low':\r\n                                if (encoding.maxBitrate) {\r\n                                    encodings[2].maxBitrate = encoding.maxBitrate;\r\n                                }\r\n                                if (encoding.maxFramerate) {\r\n                                    encodings[2].maxFramerate = encoding.maxFramerate;\r\n                                }\r\n                                break;\r\n                        }\r\n                    });\r\n                }\r\n                this.pc.addTransceiver(track, {\r\n                    streams: [this.stream],\r\n                    direction: 'sendonly',\r\n                    sendEncodings: encodings,\r\n                });\r\n            }\r\n            else {\r\n                this.pc.addTransceiver(track, {\r\n                    streams: [this.stream],\r\n                    direction: 'sendonly',\r\n                    sendEncodings: track.kind === 'video' ? [exports.VideoConstraints[this.constraints.resolution].encodings] : undefined,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    updateTrack(next, prev) {\r\n        this.stream.addTrack(next);\r\n        // If published, replace published track with track from new device\r\n        if (prev && prev.enabled) {\r\n            this.stream.removeTrack(prev);\r\n            prev.stop();\r\n            if (this.pc) {\r\n                this.pc.getSenders().forEach(async (sender) => {\r\n                    var _a, _b;\r\n                    if (((_a = sender === null || sender === void 0 ? void 0 : sender.track) === null || _a === void 0 ? void 0 : _a.kind) === next.kind) {\r\n                        (_b = sender.track) === null || _b === void 0 ? void 0 : _b.stop();\r\n                        sender.replaceTrack(next);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.stream.addTrack(next);\r\n            if (this.pc) {\r\n                this.publishTrack(next);\r\n            }\r\n        }\r\n    }\r\n    publish(pc) {\r\n        this.pc = pc;\r\n        this.stream.getTracks().forEach(this.publishTrack.bind(this));\r\n    }\r\n    unpublish() {\r\n        if (this.pc) {\r\n            this.pc.getSenders().forEach((s) => {\r\n                if (s.track !== undefined) {\r\n                    this.pc.removeTrack(s);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    async switchDevice(kind, deviceId) {\r\n        this.constraints = {\r\n            ...this.constraints,\r\n            [kind]: this.constraints[kind] instanceof Object\r\n                ? {\r\n                    ...this.constraints[kind],\r\n                    deviceId,\r\n                }\r\n                : { deviceId },\r\n        };\r\n        const prev = this.getTrack(kind);\r\n        const next = await this.getNewTrack(kind);\r\n        this.updateTrack(next, prev);\r\n    }\r\n    mute(kind) {\r\n        const track = this.getTrack(kind);\r\n        if (track) {\r\n            track.stop();\r\n        }\r\n    }\r\n    async unmute(kind) {\r\n        const prev = this.getTrack(kind);\r\n        const track = await this.getNewTrack(kind);\r\n        this.updateTrack(track, prev);\r\n    }\r\n}\r\nexports.LocalStream = LocalStream;\r\nfunction makeRemote(stream, api) {\r\n    const remote = stream;\r\n    remote.audio = true;\r\n    remote.video = 'none';\r\n    remote._videoPreMute = 'high';\r\n    const select = () => {\r\n        const call = {\r\n            streamId: remote.id,\r\n            video: remote.video,\r\n            audio: remote.audio,\r\n        };\r\n        api.send(JSON.stringify(call));\r\n    };\r\n    remote.preferLayer = (layer) => {\r\n        remote.video = layer;\r\n        select();\r\n    };\r\n    remote.mute = (kind) => {\r\n        if (kind === 'audio') {\r\n            remote.audio = false;\r\n        }\r\n        else if (kind === 'video') {\r\n            remote._videoPreMute = remote.video;\r\n            remote.video = 'none';\r\n        }\r\n        select();\r\n    };\r\n    remote.unmute = (kind) => {\r\n        if (kind === 'audio') {\r\n            remote.audio = true;\r\n        }\r\n        else if (kind === 'video') {\r\n            remote.video = remote._videoPreMute;\r\n        }\r\n        select();\r\n    };\r\n    return remote;\r\n}\r\nexports.makeRemote = makeRemote;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.IonSFUJSONRPCSignal = exports.LocalStream = exports.Client = void 0;\r\nconst client_1 = __webpack_require__(2);\r\nexports.Client = client_1.default;\r\nconst stream_1 = __webpack_require__(0);\r\nObject.defineProperty(exports, "LocalStream", { enumerable: true, get: function () { return stream_1.LocalStream; } });\r\nconst signal_1 = __webpack_require__(3);\r\nObject.defineProperty(exports, "IonSFUJSONRPCSignal", { enumerable: true, get: function () { return signal_1.IonSFUJSONRPCSignal; } });\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Jb25TREsvLi9zcmMvaW5kZXgudHM/NzFiZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsQ0FBVTtBQUNuQztBQUNBLGlCQUFpQixtQkFBTyxDQUFDLENBQVU7QUFDbkMsK0NBQStDLHFDQUFxQyw2QkFBNkIsRUFBRSxFQUFFO0FBQ3JILGlCQUFpQixtQkFBTyxDQUFDLENBQVU7QUFDbkMsdURBQXVELHFDQUFxQyxxQ0FBcUMsRUFBRSxFQUFFIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLklvblNGVUpTT05SUENTaWduYWwgPSBleHBvcnRzLkxvY2FsU3RyZWFtID0gZXhwb3J0cy5DbGllbnQgPSB2b2lkIDA7XHJcbmNvbnN0IGNsaWVudF8xID0gcmVxdWlyZShcIi4vY2xpZW50XCIpO1xyXG5leHBvcnRzLkNsaWVudCA9IGNsaWVudF8xLmRlZmF1bHQ7XHJcbmNvbnN0IHN0cmVhbV8xID0gcmVxdWlyZShcIi4vc3RyZWFtXCIpO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMb2NhbFN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3RyZWFtXzEuTG9jYWxTdHJlYW07IH0gfSk7XHJcbmNvbnN0IHNpZ25hbF8xID0gcmVxdWlyZShcIi4vc2lnbmFsXCIpO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJb25TRlVKU09OUlBDU2lnbmFsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduYWxfMS5Jb25TRlVKU09OUlBDU2lnbmFsOyB9IH0pO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst stream_1 = __webpack_require__(0);\r\nclass Client {\r\n    constructor(sid, signal, config = {\r\n        iceServers: [{ urls: 'stun:stun.stunprotocol.org:3478' }],\r\n    }) {\r\n        this.candidates = [];\r\n        this.makingOffer = false;\r\n        this.signal = signal;\r\n        this.pc = new RTCPeerConnection(config);\r\n        this.pc.onicecandidate = ({ candidate }) => {\r\n            if (candidate) {\r\n                signal.trickle(candidate);\r\n            }\r\n        };\r\n        this.api = this.pc.createDataChannel('ion-sfu');\r\n        this.pc.ontrack = (ev) => {\r\n            const stream = ev.streams[0];\r\n            const remote = stream_1.makeRemote(stream, this.api);\r\n            if (this.ontrack) {\r\n                this.ontrack(ev.track, remote);\r\n            }\r\n        };\r\n        signal.onnegotiate = this.negotiate.bind(this);\r\n        signal.ontrickle = this.trickle.bind(this);\r\n        signal.onready = () => this.join(sid);\r\n    }\r\n    getStats(selector) {\r\n        return this.pc.getStats(selector);\r\n    }\r\n    publish(stream) {\r\n        stream.publish(this.pc);\r\n    }\r\n    close() {\r\n        this.signal.close();\r\n    }\r\n    async join(sid) {\r\n        const offer = await this.pc.createOffer();\r\n        await this.pc.setLocalDescription(offer);\r\n        const answer = await this.signal.join(sid, offer);\r\n        await this.pc.setRemoteDescription(answer);\r\n        this.candidates.forEach((c) => this.pc.addIceCandidate(c));\r\n        this.pc.onnegotiationneeded = this.onNegotiationNeeded.bind(this);\r\n    }\r\n    trickle(candidate) {\r\n        if (this.pc.remoteDescription) {\r\n            this.pc.addIceCandidate(candidate);\r\n        }\r\n        else {\r\n            this.candidates.push(candidate);\r\n        }\r\n    }\r\n    async negotiate(description) {\r\n        try {\r\n            if (description.type === 'offer' && (this.makingOffer || this.pc.signalingState !== 'stable')) {\r\n                /* tslint:disable-next-line:no-console */\r\n                console.log('negotation got offer, rolling back');\r\n                await Promise.all([\r\n                    this.pc.setLocalDescription({ type: 'rollback' }),\r\n                    this.pc.setRemoteDescription(description),\r\n                ]);\r\n            }\r\n            else {\r\n                /* tslint:disable-next-line:no-console */\r\n                console.log('negotation remote description', description);\r\n                await this.pc.setRemoteDescription(description);\r\n            }\r\n            if (description.type === 'offer') {\r\n                await this.pc.setLocalDescription(await this.pc.createAnswer());\r\n                this.signal.answer(this.pc.localDescription);\r\n            }\r\n        }\r\n        catch (err) {\r\n            /* tslint:disable-next-line:no-console */\r\n            console.error(err);\r\n        }\r\n    }\r\n    async onNegotiationNeeded() {\r\n        try {\r\n            /* tslint:disable-next-line:no-console */\r\n            console.log('negotiation needed');\r\n            this.makingOffer = true;\r\n            const offer = await this.pc.createOffer();\r\n            if (this.pc.signalingState !== 'stable')\r\n                return;\r\n            await this.pc.setLocalDescription(offer);\r\n            const answer = await this.signal.offer(this.pc.localDescription);\r\n            await this.pc.setRemoteDescription(answer);\r\n        }\r\n        catch (err) {\r\n            /* tslint:disable-next-line:no-console */\r\n            console.error(err);\r\n        }\r\n        finally {\r\n            this.makingOffer = false;\r\n        }\r\n    }\r\n}\r\nexports.default = Client;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Jb25TREsvLi9zcmMvY2xpZW50LnRzP2U3MWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxpQkFBaUIsbUJBQU8sQ0FBQyxDQUFVO0FBQ25DO0FBQ0E7QUFDQSxzQkFBc0IsMENBQTBDO0FBQ2hFLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxZQUFZO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsbUJBQW1CO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCBzdHJlYW1fMSA9IHJlcXVpcmUoXCIuL3N0cmVhbVwiKTtcclxuY2xhc3MgQ2xpZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHNpZCwgc2lnbmFsLCBjb25maWcgPSB7XHJcbiAgICAgICAgaWNlU2VydmVyczogW3sgdXJsczogJ3N0dW46c3R1bi5zdHVucHJvdG9jb2wub3JnOjM0NzgnIH1dLFxyXG4gICAgfSkge1xyXG4gICAgICAgIHRoaXMuY2FuZGlkYXRlcyA9IFtdO1xyXG4gICAgICAgIHRoaXMubWFraW5nT2ZmZXIgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnNpZ25hbCA9IHNpZ25hbDtcclxuICAgICAgICB0aGlzLnBjID0gbmV3IFJUQ1BlZXJDb25uZWN0aW9uKGNvbmZpZyk7XHJcbiAgICAgICAgdGhpcy5wYy5vbmljZWNhbmRpZGF0ZSA9ICh7IGNhbmRpZGF0ZSB9KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjYW5kaWRhdGUpIHtcclxuICAgICAgICAgICAgICAgIHNpZ25hbC50cmlja2xlKGNhbmRpZGF0ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYXBpID0gdGhpcy5wYy5jcmVhdGVEYXRhQ2hhbm5lbCgnaW9uLXNmdScpO1xyXG4gICAgICAgIHRoaXMucGMub250cmFjayA9IChldikgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBzdHJlYW0gPSBldi5zdHJlYW1zWzBdO1xyXG4gICAgICAgICAgICBjb25zdCByZW1vdGUgPSBzdHJlYW1fMS5tYWtlUmVtb3RlKHN0cmVhbSwgdGhpcy5hcGkpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5vbnRyYWNrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9udHJhY2soZXYudHJhY2ssIHJlbW90ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHNpZ25hbC5vbm5lZ290aWF0ZSA9IHRoaXMubmVnb3RpYXRlLmJpbmQodGhpcyk7XHJcbiAgICAgICAgc2lnbmFsLm9udHJpY2tsZSA9IHRoaXMudHJpY2tsZS5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHNpZ25hbC5vbnJlYWR5ID0gKCkgPT4gdGhpcy5qb2luKHNpZCk7XHJcbiAgICB9XHJcbiAgICBnZXRTdGF0cyhzZWxlY3Rvcikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBjLmdldFN0YXRzKHNlbGVjdG9yKTtcclxuICAgIH1cclxuICAgIHB1Ymxpc2goc3RyZWFtKSB7XHJcbiAgICAgICAgc3RyZWFtLnB1Ymxpc2godGhpcy5wYyk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLnNpZ25hbC5jbG9zZSgpO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgam9pbihzaWQpIHtcclxuICAgICAgICBjb25zdCBvZmZlciA9IGF3YWl0IHRoaXMucGMuY3JlYXRlT2ZmZXIoKTtcclxuICAgICAgICBhd2FpdCB0aGlzLnBjLnNldExvY2FsRGVzY3JpcHRpb24ob2ZmZXIpO1xyXG4gICAgICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IHRoaXMuc2lnbmFsLmpvaW4oc2lkLCBvZmZlcik7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5wYy5zZXRSZW1vdGVEZXNjcmlwdGlvbihhbnN3ZXIpO1xyXG4gICAgICAgIHRoaXMuY2FuZGlkYXRlcy5mb3JFYWNoKChjKSA9PiB0aGlzLnBjLmFkZEljZUNhbmRpZGF0ZShjKSk7XHJcbiAgICAgICAgdGhpcy5wYy5vbm5lZ290aWF0aW9ubmVlZGVkID0gdGhpcy5vbk5lZ290aWF0aW9uTmVlZGVkLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcbiAgICB0cmlja2xlKGNhbmRpZGF0ZSkge1xyXG4gICAgICAgIGlmICh0aGlzLnBjLnJlbW90ZURlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGMuYWRkSWNlQ2FuZGlkYXRlKGNhbmRpZGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmNhbmRpZGF0ZXMucHVzaChjYW5kaWRhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGFzeW5jIG5lZ290aWF0ZShkZXNjcmlwdGlvbikge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmIChkZXNjcmlwdGlvbi50eXBlID09PSAnb2ZmZXInICYmICh0aGlzLm1ha2luZ09mZmVyIHx8IHRoaXMucGMuc2lnbmFsaW5nU3RhdGUgIT09ICdzdGFibGUnKSkge1xyXG4gICAgICAgICAgICAgICAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGUgKi9cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCduZWdvdGF0aW9uIGdvdCBvZmZlciwgcm9sbGluZyBiYWNrJyk7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYy5zZXRMb2NhbERlc2NyaXB0aW9uKHsgdHlwZTogJ3JvbGxiYWNrJyB9KSxcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBjLnNldFJlbW90ZURlc2NyaXB0aW9uKGRlc2NyaXB0aW9uKSxcclxuICAgICAgICAgICAgICAgIF0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGUgKi9cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCduZWdvdGF0aW9uIHJlbW90ZSBkZXNjcmlwdGlvbicsIGRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucGMuc2V0UmVtb3RlRGVzY3JpcHRpb24oZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChkZXNjcmlwdGlvbi50eXBlID09PSAnb2ZmZXInKSB7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnBjLnNldExvY2FsRGVzY3JpcHRpb24oYXdhaXQgdGhpcy5wYy5jcmVhdGVBbnN3ZXIoKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNpZ25hbC5hbnN3ZXIodGhpcy5wYy5sb2NhbERlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlICovXHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBhc3luYyBvbk5lZ290aWF0aW9uTmVlZGVkKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlICovXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCduZWdvdGlhdGlvbiBuZWVkZWQnKTtcclxuICAgICAgICAgICAgdGhpcy5tYWtpbmdPZmZlciA9IHRydWU7XHJcbiAgICAgICAgICAgIGNvbnN0IG9mZmVyID0gYXdhaXQgdGhpcy5wYy5jcmVhdGVPZmZlcigpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wYy5zaWduYWxpbmdTdGF0ZSAhPT0gJ3N0YWJsZScpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGMuc2V0TG9jYWxEZXNjcmlwdGlvbihvZmZlcik7XHJcbiAgICAgICAgICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IHRoaXMuc2lnbmFsLm9mZmVyKHRoaXMucGMubG9jYWxEZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGMuc2V0UmVtb3RlRGVzY3JpcHRpb24oYW5zd2VyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICAvKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uc29sZSAqL1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZpbmFsbHkge1xyXG4gICAgICAgICAgICB0aGlzLm1ha2luZ09mZmVyID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuZGVmYXVsdCA9IENsaWVudDtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.IonSFUJSONRPCSignal = void 0;\r\nconst ion_sfu_1 = __webpack_require__(4);\r\nexports.IonSFUJSONRPCSignal = ion_sfu_1.default;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Jb25TREsvLi9zcmMvc2lnbmFsL2luZGV4LnRzP2U5ZmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLENBQVc7QUFDckMiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuSW9uU0ZVSlNPTlJQQ1NpZ25hbCA9IHZvaWQgMDtcclxuY29uc3QgaW9uX3NmdV8xID0gcmVxdWlyZShcIi4vaW9uLXNmdVwiKTtcclxuZXhwb3J0cy5Jb25TRlVKU09OUlBDU2lnbmFsID0gaW9uX3NmdV8xLmRlZmF1bHQ7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(5);\r\nclass IonSFUJSONRPCSignal {\r\n    constructor(uri) {\r\n        this.socket = new WebSocket(uri);\r\n        this.socket.addEventListener('open', () => {\r\n            if (this._onready)\r\n                this._onready();\r\n        });\r\n        this.socket.addEventListener('error', (e) => {\r\n            if (this._onerror)\r\n                this._onerror(e);\r\n        });\r\n        this.socket.addEventListener('message', async (event) => {\r\n            const resp = JSON.parse(event.data);\r\n            if (resp.method === 'offer') {\r\n                if (this.onnegotiate)\r\n                    this.onnegotiate(resp.params);\r\n            }\r\n            else if (resp.method === 'trickle') {\r\n                if (this.ontrickle)\r\n                    this.ontrickle(resp.params);\r\n            }\r\n        });\r\n    }\r\n    join(sid, offer) {\r\n        const id = uuid_1.v4();\r\n        this.socket.send(JSON.stringify({\r\n            method: 'join',\r\n            params: { sid, offer },\r\n            id,\r\n        }));\r\n        return new Promise((resolve, reject) => {\r\n            const handler = (event) => {\r\n                const resp = JSON.parse(event.data);\r\n                if (resp.id === id) {\r\n                    resolve(resp.result);\r\n                    this.socket.removeEventListener('message', handler);\r\n                }\r\n            };\r\n            this.socket.addEventListener('message', handler);\r\n        });\r\n    }\r\n    trickle(candidate) {\r\n        this.socket.send(JSON.stringify({\r\n            method: 'trickle',\r\n            params: {\r\n                candidate,\r\n            },\r\n        }));\r\n    }\r\n    offer(offer) {\r\n        const id = uuid_1.v4();\r\n        this.socket.send(JSON.stringify({\r\n            method: 'offer',\r\n            params: { desc: offer },\r\n            id,\r\n        }));\r\n        return new Promise((resolve, reject) => {\r\n            const handler = (event) => {\r\n                const resp = JSON.parse(event.data);\r\n                if (resp.id === id) {\r\n                    resolve(resp.result);\r\n                }\r\n                this.socket.removeEventListener('message', handler);\r\n            };\r\n            this.socket.addEventListener('message', handler);\r\n        });\r\n    }\r\n    answer(answer) {\r\n        this.socket.send(JSON.stringify({\r\n            method: 'answer',\r\n            params: { desc: answer },\r\n        }));\r\n    }\r\n    close() {\r\n        this.socket.close();\r\n    }\r\n    set onready(onready) {\r\n        if (this.socket.readyState === WebSocket.OPEN) {\r\n            onready();\r\n        }\r\n        this._onready = onready;\r\n    }\r\n    set onerror(onerror) {\r\n        this._onerror = onerror;\r\n    }\r\n}\r\nexports.default = IonSFUJSONRPCSignal;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Jb25TREsvLi9zcmMvc2lnbmFsL2lvbi1zZnUudHM/NGUzMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGVBQWUsbUJBQU8sQ0FBQyxDQUFNO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixhQUFhO0FBQ2xDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsY0FBYztBQUNuQztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZUFBZTtBQUNwQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCB1dWlkXzEgPSByZXF1aXJlKFwidXVpZFwiKTtcclxuY2xhc3MgSW9uU0ZVSlNPTlJQQ1NpZ25hbCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih1cmkpIHtcclxuICAgICAgICB0aGlzLnNvY2tldCA9IG5ldyBXZWJTb2NrZXQodXJpKTtcclxuICAgICAgICB0aGlzLnNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fb25yZWFkeSlcclxuICAgICAgICAgICAgICAgIHRoaXMuX29ucmVhZHkoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9vbmVycm9yKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fb25lcnJvcihlKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgYXN5bmMgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3AgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpO1xyXG4gICAgICAgICAgICBpZiAocmVzcC5tZXRob2QgPT09ICdvZmZlcicpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9ubmVnb3RpYXRlKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25uZWdvdGlhdGUocmVzcC5wYXJhbXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHJlc3AubWV0aG9kID09PSAndHJpY2tsZScpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9udHJpY2tsZSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9udHJpY2tsZShyZXNwLnBhcmFtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGpvaW4oc2lkLCBvZmZlcikge1xyXG4gICAgICAgIGNvbnN0IGlkID0gdXVpZF8xLnY0KCk7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ2pvaW4nLFxyXG4gICAgICAgICAgICBwYXJhbXM6IHsgc2lkLCBvZmZlciB9LFxyXG4gICAgICAgICAgICBpZCxcclxuICAgICAgICB9KSk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaGFuZGxlciA9IChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcCA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSk7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcC5pZCA9PT0gaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3AucmVzdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNvY2tldC5yZW1vdmVFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgaGFuZGxlcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHRoaXMuc29ja2V0LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBoYW5kbGVyKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHRyaWNrbGUoY2FuZGlkYXRlKSB7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ3RyaWNrbGUnLFxyXG4gICAgICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgICAgICAgIGNhbmRpZGF0ZSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcbiAgICBvZmZlcihvZmZlcikge1xyXG4gICAgICAgIGNvbnN0IGlkID0gdXVpZF8xLnY0KCk7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ29mZmVyJyxcclxuICAgICAgICAgICAgcGFyYW1zOiB7IGRlc2M6IG9mZmVyIH0sXHJcbiAgICAgICAgICAgIGlkLFxyXG4gICAgICAgIH0pKTtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwID0gSlNPTi5wYXJzZShldmVudC5kYXRhKTtcclxuICAgICAgICAgICAgICAgIGlmIChyZXNwLmlkID09PSBpZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcC5yZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5zb2NrZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGhhbmRsZXIpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgaGFuZGxlcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBhbnN3ZXIoYW5zd2VyKSB7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ2Fuc3dlcicsXHJcbiAgICAgICAgICAgIHBhcmFtczogeyBkZXNjOiBhbnN3ZXIgfSxcclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLnNvY2tldC5jbG9zZSgpO1xyXG4gICAgfVxyXG4gICAgc2V0IG9ucmVhZHkob25yZWFkeSkge1xyXG4gICAgICAgIGlmICh0aGlzLnNvY2tldC5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuT1BFTikge1xyXG4gICAgICAgICAgICBvbnJlYWR5KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX29ucmVhZHkgPSBvbnJlYWR5O1xyXG4gICAgfVxyXG4gICAgc2V0IG9uZXJyb3Iob25lcnJvcikge1xyXG4gICAgICAgIHRoaXMuX29uZXJyb3IgPSBvbmVycm9yO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuZGVmYXVsdCA9IElvblNGVUpTT05SUENTaWduYWw7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"v1\", function() { return /* reexport */ esm_browser_v1; });\n__webpack_require__.d(__webpack_exports__, \"v3\", function() { return /* reexport */ esm_browser_v3; });\n__webpack_require__.d(__webpack_exports__, \"v4\", function() { return /* reexport */ esm_browser_v4; });\n__webpack_require__.d(__webpack_exports__, \"v5\", function() { return /* reexport */ esm_browser_v5; });\n__webpack_require__.d(__webpack_exports__, \"NIL\", function() { return /* reexport */ nil; });\n__webpack_require__.d(__webpack_exports__, \"version\", function() { return /* reexport */ esm_browser_version; });\n__webpack_require__.d(__webpack_exports__, \"validate\", function() { return /* reexport */ esm_browser_validate; });\n__webpack_require__.d(__webpack_exports__, \"stringify\", function() { return /* reexport */ esm_browser_stringify; });\n__webpack_require__.d(__webpack_exports__, \"parse\", function() { return /* reexport */ esm_browser_parse; });\n\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/regex.js\n/* harmony default export */ var regex = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/validate.js\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && regex.test(uuid);\n}\n\n/* harmony default export */ var esm_browser_validate = (validate);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/stringify.js\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var stringify_i = 0; stringify_i < 256; ++stringify_i) {\n  byteToHex.push((stringify_i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!esm_browser_validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ var esm_browser_stringify = (stringify);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v1.js\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || esm_browser_stringify(b);\n}\n\n/* harmony default export */ var esm_browser_v1 = (v1);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/parse.js\n\n\nfunction parse(uuid) {\n  if (!esm_browser_validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ var esm_browser_parse = (parse);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v35.js\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ var v35 = (function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = esm_browser_parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return esm_browser_stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n});\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/md5.js\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ var esm_browser_md5 = (md5);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v3.js\n\n\nvar v3 = v35('v3', 0x30, esm_browser_md5);\n/* harmony default export */ var esm_browser_v3 = (v3);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return esm_browser_stringify(rnds);\n}\n\n/* harmony default export */ var esm_browser_v4 = (v4);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/sha1.js\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ var esm_browser_sha1 = (sha1);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v5.js\n\n\nvar v5 = v35('v5', 0x50, esm_browser_sha1);\n/* harmony default export */ var esm_browser_v5 = (v5);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/nil.js\n/* harmony default export */ var nil = ('00000000-0000-0000-0000-000000000000');\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/version.js\n\n\nfunction version_version(uuid) {\n  if (!esm_browser_validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ var esm_browser_version = (version_version);\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/index.js\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")}]);